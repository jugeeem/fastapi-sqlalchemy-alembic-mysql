[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.15.1",
    "cryptography>=44.0.2",
    "fastapi[standard]>=0.115.12",
    "httpx>=0.28.1",
    "mysqlclient>=2.2.7",
    "passlib[bcrypt]>=1.7.4",
    "pydantic-settings>=2.8.1",
    "pyjwt>=2.10.1",
    "pymysql>=1.1.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pyyaml>=6.0.2",
    "sqlalchemy>=2.0.39",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
]

test = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.28.1",
]

[tool.setuptools]
packages = ["app"] 

[dependency-groups]
dev = [
    "ruff>=0.11.2",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 79
indent-width = 4

[tool.ruff.lint]
select = [
    "E4", 
    "E7", 
    "E9", 
    "F", 
    "B",
    "I",
]
ignore = [
    "E501",
    "B008",
]
unfixable = [
    "B"
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
cache_dir = "/tmp/.pytest_cache"
