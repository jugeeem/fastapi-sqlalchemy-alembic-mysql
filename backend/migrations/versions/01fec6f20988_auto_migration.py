"""Auto migration

Revision ID: 01fec6f20988
Revises:
Create Date: 2025-03-26 14:43:45.425431

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "01fec6f20988"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", mysql.CHAR(length=36), nullable=False),
        sa.Column("role_name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("remarks", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=255), nullable=False),
        sa.Column(
            "delete_flag", mysql.TINYINT(display_width=1), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("role_name"),
    )
    op.create_index("idx_id", "roles", ["id"], unique=False)
    op.create_index("idx_role_name", "roles", ["role_name"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", mysql.CHAR(length=36), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("manager_id", mysql.CHAR(length=36), nullable=False),
        sa.Column("remarks", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=255), nullable=False),
        sa.Column(
            "delete_flag", mysql.TINYINT(display_width=1), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_index(
        op.f("ix_users_username"), "users", ["username"], unique=True
    )
    op.create_table(
        "user_info",
        sa.Column("user_id", mysql.CHAR(length=36), nullable=False),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("first_name_ruby", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("last_name_ruby", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.String(length=13), nullable=True),
        sa.Column("zip_code", sa.String(length=8), nullable=True),
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("id", mysql.CHAR(length=36), nullable=False),
        sa.Column("remarks", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=255), nullable=False),
        sa.Column(
            "delete_flag", mysql.TINYINT(display_width=1), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_id", "user_info", ["id"], unique=False)
    op.create_index("idx_user_id", "user_info", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_user_info_user_id"), "user_info", ["user_id"], unique=False
    )
    op.create_table(
        "user_roles",
        sa.Column("id", mysql.CHAR(length=36), nullable=False),
        sa.Column("user_id", mysql.CHAR(length=36), nullable=False),
        sa.Column("role_id", mysql.CHAR(length=36), nullable=False),
        sa.Column("remarks", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=255), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=255), nullable=False),
        sa.Column(
            "delete_flag", mysql.TINYINT(display_width=1), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "role_id", name="uq_user_role"),
    )
    op.create_index("idx_id", "user_roles", ["id"], unique=False)
    op.create_index("idx_role_id", "user_roles", ["role_id"], unique=False)
    op.create_index("idx_user_id", "user_roles", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_user_id", table_name="user_roles")
    op.drop_index("idx_role_id", table_name="user_roles")
    op.drop_index("idx_id", table_name="user_roles")
    op.drop_table("user_roles")
    op.drop_index(op.f("ix_user_info_user_id"), table_name="user_info")
    op.drop_index("idx_user_id", table_name="user_info")
    op.drop_index("idx_id", table_name="user_info")
    op.drop_table("user_info")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index("idx_role_name", table_name="roles")
    op.drop_index("idx_id", table_name="roles")
    op.drop_table("roles")
    # ### end Alembic commands ###
